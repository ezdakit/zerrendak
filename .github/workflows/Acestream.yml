name: Acestream Docker Setup

on:
  workflow_dispatch:
    inputs:
      port_base:
        description: "Puerto base (6878 por defecto)"
        required: false
        default: "6878"

env:
  IMAGE_NAME: smarquezp/docker-acestream-ubuntu-home:latest
  SERVICE_NAME_BASE: acestream_
  DOCKER_COMPOSE_FILE: docker-compose.yml

jobs:
  setup-acestream:
    runs-on: ubuntu-latest
    
    steps:
    - name: Install Docker (Ubuntu 24.04 compatible)
      run: |
        # SoluciÃ³n para Ubuntu 24.04 (Noble)
        sudo apt-get remove -y containerd docker.io || true
        sudo apt-get update
        sudo apt-get install -y ca-certificates curl
        sudo install -m 0755 -d /etc/apt/keyrings
        sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
        sudo chmod a+r /etc/apt/keyrings/docker.asc
        
        # Usar jammy (22.04) como fuente temporal para compatibilidad
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu jammy stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        
        sudo apt-get update
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
        sudo systemctl start docker
        docker --version
        docker compose version

    - name: Create docker-compose.yml
      run: |
        cat << EOF > $DOCKER_COMPOSE_FILE
        version: '3.8'
        services:
          ${SERVICE_NAME_BASE}6878:
            image: $IMAGE_NAME
            container_name: ${SERVICE_NAME_BASE}6878
            restart: unless-stopped
            network_mode: host
            ports:
              - "6878:6878"
        EOF
        cat $DOCKER_COMPOSE_FILE
        
    - name: Start Acestream service
      run: |
        docker compose -f $DOCKER_COMPOSE_FILE up -d
        sleep 30
        echo "Acestream running at http://localhost:6878/webui/player/"
        docker ps -a
        docker logs ${SERVICE_NAME_BASE}6878

  screenshot-api:
    needs: setup-acestream
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        npm install puppeteer@19.11.1
        sudo apt-get install -y xvfb libgbm-dev
        
    - name: Run screenshot with xvfb
      run: |
        cat << 'EOF' > screenshot.js
        const puppeteer = require('puppeteer');
        
        (async () => {
          const browser = await puppeteer.launch({
            headless: 'new',
            args: ['--no-sandbox', '--disable-setuid-sandbox']
          });
          const page = await browser.newPage();
          
          try {
            await page.setViewport({ width: 1280, height: 800 });
            const port = '6878';
            const url = `http://localhost:${port}/webui/api/service?method=get_version`;
            
            console.log(`Navigating to: ${url}`);
            const response = await page.goto(url, { 
              waitUntil: 'networkidle2', 
              timeout: 60000 
            });
            
            if (!response.ok()) {
              console.error(`HTTP Error: ${response.status()}`);
              process.exit(0);
            }
            
            await page.waitForTimeout(5000);
            await page.screenshot({ 
              path: 'acestream_api.png', 
              fullPage: true,
              quality: 85
            });
            console.log('Screenshot successful');
          } catch (error) {
            console.error('Error:', error.message);
            process.exit(0);
          } finally {
            await browser.close();
          }
        })();
        EOF
        
        xvfb-run --auto-servernum node screenshot.js || echo "Screenshot completed with status $?"
        
    - name: Upload results
      uses: actions/upload-artifact@v3
      with:
        name: acestream-results
        path: |
          acestream_api.png
          screenshot.js
