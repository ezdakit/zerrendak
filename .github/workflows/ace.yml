name: Acestream Localhost Deployment

on:
  workflow_dispatch:
    inputs:
      port_base:
        description: "Puerto de Acestream (6878 por defecto)"
        required: false
        default: "6878"

env:
  IMAGE_NAME: smarquezp/docker-acestream-ubuntu-home:latest
  SERVICE_NAME: "acestream"
  DOCKER_COMPOSE_FILE: "docker-compose.yml"

jobs:
  deploy-and-verify:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    # --- Instalaci√≥n de Docker ---
    - name: Install Docker
      run: |
        sudo apt-get update
        sudo apt-get install -y ca-certificates curl gnupg
        sudo install -m 0755 -d /etc/apt/keyrings
        sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
        sudo chmod a+r /etc/apt/keyrings/docker.asc
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin

    # --- Configuraci√≥n del servicio ---
    - name: Setup Acestream
      run: |
        cat << EOF > $DOCKER_COMPOSE_FILE
        version: '3.8'
        services:
          $SERVICE_NAME:
            image: $IMAGE_NAME
            container_name: $SERVICE_NAME
            restart: unless-stopped
            network_mode: "host"
            ports:
              - "127.0.0.1:${{ github.event.inputs.port_base }}:${{ github.event.inputs.port_base }}"
        EOF

        docker compose -f $DOCKER_COMPOSE_FILE up -d
        echo "üü¢ Acestream iniciado en: http://127.0.0.1:${{ github.event.inputs.port_base }}/webui/player/"

    # --- Verificaci√≥n ---
    - name: Verify Service
      run: |
        # Instalar herramientas de diagn√≥stico
        sudo apt-get install -y netcat-openbsd curl

        # Verificar puerto
        echo "üîç Verificando puerto ${{ github.event.inputs.port_base }} en 127.0.0.1..."
        nc -zv -w 5 127.0.0.1 ${{ github.event.inputs.port_base }} && echo "‚úÖ Puerto accesible" || echo "‚ùå Puerto no accesible"

        # Verificar WebUI (con timeout)
        echo -e "\nüåê Probando WebUI..."
        curl --max-time 5 -sSf http://127.0.0.1:${{ github.event.inputs.port_base }}/webui/player/ && echo "‚úÖ WebUI funciona" || echo "‚ùå WebUI inaccesible"

        # Verificar contenedor
        echo -e "\nüê≥ Estado del contenedor:"
        docker ps -a | grep $SERVICE_NAME

        # Verificar logs (√∫ltimas 10 l√≠neas)
        echo -e "\nüìú Logs del contenedor:"
        docker logs --tail 10 $SERVICE_NAME

    # --- Limpieza opcional (descomentar si es necesario) ---
    # - name: Cleanup
    #   if: always()
    #   run: |
    #     docker compose -f $DOCKER_COMPOSE_FILE down
    #     rm $DOCKER_COMPOSE_FILE
