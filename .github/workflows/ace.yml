name: Acestream Stable Deployment

on:
  workflow_dispatch:
    inputs:
      port_base:
        description: "Puerto de Acestream (6878 por defecto)"
        required: false
        default: "6878"

env:
  IMAGE_NAME: smarquezp/docker-acestream-ubuntu-home:latest
  SERVICE_NAME: "acestream"
  DOCKER_COMPOSE_FILE: "docker-compose.yml"

jobs:
  deploy-acestream:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
    - name: Install Docker
      run: |
        sudo apt-get update
        sudo apt-get install -y ca-certificates curl gnupg
        sudo install -m 0755 -d /etc/apt/keyrings
        sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
        sudo chmod a+r /etc/apt/keyrings/docker.asc
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin

    - name: Setup Acestream with proper configuration
      run: |
        cat << EOF > $DOCKER_COMPOSE_FILE
        version: '3.8'
        services:
          $SERVICE_NAME:
            image: $IMAGE_NAME
            container_name: $SERVICE_NAME
            restart: unless-stopped
            ports:
              - "127.0.0.1:${{ github.event.inputs.port_base }}:${{ github.event.inputs.port_base }}"
            environment:
              - HTTP_PORT=${{ github.event.inputs.port_base }}
              - API_PORT=$(( ${{ github.event.inputs.port_base }} + 1 ))
            volumes:
              - acestream_data:/storage
            healthcheck:
              test: ["CMD-SHELL", "curl -f http://localhost:${{ github.event.inputs.port_base }}/webui/player/ || exit 1"]
              interval: 15s
              timeout: 10s
              retries: 10
              start_period: 2m
        volumes:
          acestream_data:
        EOF

        docker compose -f $DOCKER_COMPOSE_FILE up -d
        echo "üü† Acestream inici√°ndose (puede tardar hasta 5 minutos en primera ejecuci√≥n)..."

    - name: Wait for service initialization
      run: |
        # Espera extendida para la primera configuraci√≥n
        sleep 300
        
        # Verificaci√≥n manual
        docker ps -a
        echo "--- Logs del contenedor ---"
        docker logs $SERVICE_NAME --tail 50
        
        # Verificaci√≥n final
        if curl -sSf --connect-timeout 10 http://127.0.0.1:${{ github.event.inputs.port_base }}/webui/player/; then
          echo "‚úÖ Acestream listo en: http://127.0.0.1:${{ github.event.inputs.port_base }}/webui/player/"
        else
          echo "‚ùå Fallo en la inicializaci√≥n"
          docker logs $SERVICE_NAME
          exit 1
        fi
