name: Acestream Full Configuration Deployment

on:
  workflow_dispatch:
    inputs:
      port_base:
        description: "Puerto base HTTP (6878 por defecto)"
        required: false
        default: "6878"

env:
  IMAGE_NAME: smarquezp/docker-acestream-ubuntu-home:latest
  SERVICE_NAME: "acestream"
  DOCKER_COMPOSE_FILE: "docker-compose.yml"

jobs:
  deploy-acestream:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Install Docker
      run: |
        sudo apt-get update
        sudo apt-get install -y ca-certificates curl gnupg
        sudo install -m 0755 -d /etc/apt/keyrings
        sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
        sudo chmod a+r /etc/apt/keyrings/docker.asc
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin

    - name: Configure Acestream with all required parameters
      run: |
        cat << EOF > $DOCKER_COMPOSE_FILE
        version: '3.8'
        services:
          $SERVICE_NAME:
            image: $IMAGE_NAME
            container_name: $SERVICE_NAME
            restart: unless-stopped
            network_mode: "host"
            environment:
              - PORT=${{ github.event.inputs.port_base }}
              - HTTP_PORT=${{ github.event.inputs.port_base }}
              - HTTPS_PORT=$(( ${{ github.event.inputs.port_base }} + 1 ))
              - API_PORT=$(( ${{ github.event.inputs.port_base }} + 2 ))
              - BIND_ALL=0
              - FALLBACK_TO_DYNAMIC_PORTS=1
            volumes:
              - acestream_data:/storage
            healthcheck:
              test: ["CMD-SHELL", "curl -f http://localhost:${{ github.event.inputs.port_base }}/webui/player/ || exit 1"]
              interval: 20s
              timeout: 15s
              retries: 12
              start_period: 5m
        volumes:
          acestream_data:
        EOF

        docker compose -f $DOCKER_COMPOSE_FILE up -d
        echo "üü† Acestream inici√°ndose (puede tardar hasta 10 minutos en primera ejecuci√≥n)..."

    - name: Extended initialization wait
      run: |
        # Espera extendida para descarga inicial de componentes
        sleep 600
        
        # Verificaci√≥n exhaustiva
        echo "=== Estado del contenedor ==="
        docker ps -a
        
        echo "=== √öltimos 100 logs ==="
        docker logs $SERVICE_NAME --tail 100
        
        echo "=== Verificaci√≥n de puertos ==="
        netstat -tulnp | grep ${{ github.event.inputs.port_base }} || echo "Puerto no encontrado"
        
        echo "=== Intento de conexi√≥n ==="
        if curl -sSf --connect-timeout 15 http://127.0.0.1:${{ github.event.inputs.port_base }}/webui/player/; then
          echo "‚úÖ Acestream listo en: http://127.0.0.1:${{ github.event.inputs.port_base }}/webui/player/"
        else
          echo "‚ùå Fallo en la inicializaci√≥n - Mostrando logs completos:"
          docker logs $SERVICE_NAME
          exit 1
        fi
