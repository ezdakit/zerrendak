name: Acestream Localhost Deployment

on:
  workflow_dispatch:
    inputs:
      port_base:
        description: "Puerto de Acestream (6878 por defecto)"
        required: false
        default: "6878"

env:
  IMAGE_NAME: smarquezp/docker-acestream-ubuntu-home:latest
  SERVICE_NAME: "acestream"
  DOCKER_COMPOSE_FILE: "docker-compose.yml"

jobs:
  deploy-and-verify:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    # --- Instalaci√≥n de Docker ---
    - name: Install Docker
      run: |
        sudo apt-get update
        sudo apt-get install -y ca-certificates curl gnupg
        sudo install -m 0755 -d /etc/apt/keyrings
        sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
        sudo chmod a+r /etc/apt/keyrings/docker.asc
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin

    - name: Start Acestream with healthcheck
      run: |
        # Configuraci√≥n con health check
        cat << EOF > $DOCKER_COMPOSE_FILE
        version: '3.8'
        services:
          $SERVICE_NAME:
            image: $IMAGE_NAME
            container_name: $SERVICE_NAME
            restart: unless-stopped
            ports:
              - "127.0.0.1:${{ github.event.inputs.port_base }}:${{ github.event.inputs.port_base }}"
            healthcheck:
              test: ["CMD", "curl", "-f", "http://127.0.0.1:${{ github.event.inputs.port_base }}"]
              interval: 5s
              timeout: 3s
              retries: 5
        EOF

        docker compose -f $DOCKER_COMPOSE_FILE up -d --wait
        echo "üü¢ Acestream iniciado en: http://127.0.0.1:${{ github.event.inputs.port_base }}/webui/player/"

    - name: Verify Service
      run: |
        # Espera adicional (por si acaso)
        sleep 10

        # Verificaci√≥n con docker healthcheck
        CONTAINER_HEALTH=$(docker inspect --format='{{.State.Health.Status}}' $SERVICE_NAME)
        echo "ü©∫ Estado del contenedor: $CONTAINER_HEALTH"
        
        # Verificaci√≥n manual
        nc -zv -w 5 127.0.0.1 ${{ github.event.inputs.port_base }} && echo "‚úÖ Puerto accesible" || echo "‚ùå Puerto no accesible"
        curl --max-time 5 -sSf http://127.0.0.1:${{ github.event.inputs.port_base }}/webui/player/ && echo "‚úÖ WebUI funciona" || echo "‚ùå WebUI inaccesible"
