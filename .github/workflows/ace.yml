name: Acestream Deployment with Health Check

on:
  workflow_dispatch:
    inputs:
      port_base:
        description: "Puerto de Acestream (6878 por defecto)"
        required: false
        default: "6878"

env:
  IMAGE_NAME: smarquezp/docker-acestream-ubuntu-home:latest
  SERVICE_NAME: "acestream"
  DOCKER_COMPOSE_FILE: "docker-compose.yml"

jobs:
  deploy-acestream:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - name: Install Docker
      run: |
        sudo apt-get update
        sudo apt-get install -y ca-certificates curl gnupg
        sudo install -m 0755 -d /etc/apt/keyrings
        sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
        sudo chmod a+r /etc/apt/keyrings/docker.asc
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin

    - name: Setup Acestream
      run: |
        cat << EOF > $DOCKER_COMPOSE_FILE
        version: '3.8'
        services:
          $SERVICE_NAME:
            image: $IMAGE_NAME
            container_name: $SERVICE_NAME
            restart: unless-stopped
            ports:
              - "127.0.0.1:${{ github.event.inputs.port_base }}:${{ github.event.inputs.port_base }}"
            healthcheck:
              test: ["CMD-SHELL", "curl -f http://localhost:${{ github.event.inputs.port_base }}/webui/player/ || exit 1"]
              interval: 10s
              timeout: 5s
              retries: 6
              start_period: 30s
        EOF

        docker compose -f $DOCKER_COMPOSE_FILE up -d
        echo "üü¢ Acestream inici√°ndose (puede tardar varios minutos en primera ejecuci√≥n)..."

    - name: Wait for healthy status
      run: |
        # Espera hasta 5 minutos que el contenedor est√© healthy
        timeout 300 bash -c 'while [[ $(docker inspect -f "{{.State.Health.Status}}" $SERVICE_NAME) != "healthy" ]]; do
          echo "‚è≥ Estado actual: $(docker inspect -f "{{.State.Health.Status}}" $SERVICE_NAME). Esperando..."
          sleep 10
        done' || (echo "‚ùå Tiempo de espera agotado"; docker logs $SERVICE_NAME; exit 1)
        
        echo "‚úÖ Contenedor saludable"
        echo "URL: http://127.0.0.1:${{ github.event.inputs.port_base }}/webui/player/"

    - name: Verify service
      run: |
        docker ps -a
        echo "--- Logs del contenedor ---"
        docker logs $SERVICE_NAME
        echo "--- Verificaci√≥n final ---"
        curl -v http://127.0.0.1:${{ github.event.inputs.port_base }}/webui/player/
